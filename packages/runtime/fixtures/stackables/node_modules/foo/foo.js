'use strict'

const {ConfigManager} = require('@platformatic/config')
const { schemaComponents, buildStackable: buildServiceStackable, configManagerConfig } = require('@platformatic/service')

const schema= {
    $id: 'https://example.com/schemas/foo.json',
    title: 'Platformatic Service',
    type: 'object',
    properties: {
      server: schemaComponents.server,
      plugins: schemaComponents.plugins,
      watch: {
        anyOf: [schemaComponents.watch, {
          type: 'boolean'
        }, {
          type: 'string'
        }]
      },
      $schema: {
        type: 'string'
      },
      module: {
        type: 'string'
      },
      foo: {
        type: 'object',
        properties: {
          text: {
            type: 'string'
          }
        },
        required: ['text']
      }
    },
    additionalProperties: false,
    required: ['server']
  }

/**  @type {import('fastify').FastifyPluginAsync<{}>} */
async function foo (app) {
  const text = app.platformatic.config.foo.text
  app.get('/foo', async (request, reply) => {
    return text
  })
}

async function buildStackable(opts) {
  opts.context.schema = schema
  opts.context.applicationFactory = foo
  return buildServiceStackable(opts)
}

module.exports = {
  buildStackable,
  configType: 'foo',
  configManagerConfig: {
    ...configManagerConfig,
    envWhitelist: ['PORT', 'HOSTNAME'],
    allowToWatch: ['.env'],
  },
  schema   
}
