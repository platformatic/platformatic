import { deepStrictEqual, ok } from 'node:assert'
import { readFile, writeFile } from 'node:fs/promises'
import { resolve } from 'node:path'
import { test } from 'node:test'
import { version } from '../lib/schema.js'
import { changeWorkingDirectory, createTemporaryDirectory, wattpm } from './helper.js'

const schema = `https://schemas.platformatic.dev/@platformatic/node/${version}.json?autogenerated=true`

for (const command of ['build', 'start', 'dev']) {
  test(`${command} - when no configuration file exists, should create a watt.json automatically and fail due to missing dependency`, async t => {
    const rootDir = await createTemporaryDirectory(t, 'cli-build')
    await writeFile(resolve(rootDir, 'index.js'), '{}', 'utf-8')

    changeWorkingDirectory(t, rootDir)
    const wattProcess = await wattpm(command, rootDir, { reject: false })

    deepStrictEqual(wattProcess.exitCode, 1)
    ok(
      wattProcess.stdout.includes(
        'We have auto-detected that the current folder is a generic Node.js application so we have created a watt.json file for you automatically.'
      )
    )
    ok(
      wattProcess.stdout.includes(
        'Cannot load module @platformatic/node. Please add it to your package.json and try again.'
      )
    )

    deepStrictEqual(
      await readFile(resolve(rootDir, 'watt.json'), 'utf-8'),
      JSON.stringify({ $schema: schema }, null, 2)
    )
  })
}
