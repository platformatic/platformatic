{
  "openapi": "3.0.3",
  "info": {
    "title": "Complex Schema Test",
    "description": "Testing complex schema types",
    "version": "1.0.0"
  },
  "paths": {
    "/combined-example/{id}": {
      "get": {
        "operationId": "getCombinedExample",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Combined example response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": ["id", "name", "description", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/type-example": {
      "post": {
        "operationId": "postTypeExample",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "properties": {
                      "objectType": {
                        "type": "string",
                        "enum": ["typeA"]
                      },
                      "valueA": {
                        "type": "string"
                      }
                    },
                    "required": ["objectType", "valueA"]
                  },
                  {
                    "properties": {
                      "objectType": {
                        "type": "string",
                        "enum": ["typeB"]
                      },
                      "valueB": {
                        "type": "number"
                      }
                    },
                    "required": ["objectType", "valueB"]
                  }
                ],
                "discriminator": {
                  "propertyName": "objectType"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Type example response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    },
                    "originalValue": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
