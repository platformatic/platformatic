name: run tests

on:
  push:
    branches:
      - main
      - v1.x
      - v2.x
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'signatures/**'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'signatures/**'
  workflow_dispatch:
    inputs:
      job:
        description: 'Run a single job'
        required: false
        default: ''

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  setup:
    name: 'setup - ${{ matrix.os }}'
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node: 22
          cache: 'pnpm'
      - uses: 'nick-fields/retry@v3.0.2'
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm fetch --ignore-scripts

  dependency-check:
    name: 'dependency-check - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'dependency-check' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        id: install
        run: |
          pnpm install --production --frozen-lockfile 2>&1 | tee out
          echo "pnpmoutput<<EOF" >> $GITHUB_OUTPUT
          cat out >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Watt must load
        run: cd packages/wattpm && node bin/cli.js
      - name: Circular Dependency
        if: contains(steps.install.outputs.pnpmoutput, 'cyclic')
        run: exit 1

  runtime-lint:
    name: 'runtime-lint'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'runtime-lint' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node: 22
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run runtime package test suite
        run: cd packages/runtime && pnpm run lint

  db-lint:
    name: 'db-lint'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'db-lint' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node: 22
          cache: 'pnpm'
      - name: pnpm install
        run: pnpm install --frozen-lockfile
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Linting & Typescript for test suite sql-mapper
        run: |
          pnpm --filter="@platformatic/sql-mapper" run lint
          pnpm --filter="@platformatic/sql-mapper" run test:typescript
      - name: Linting & Typescript for test suite sql-json-schema-mapper
        run: |
          pnpm --filter="@platformatic/sql-json-schema-mapper" run lint
          pnpm --filter="@platformatic/sql-json-schema-mapper" run test:typescript
      - name: Linting & Typescript for test suite sql-openapi
        run: |
          pnpm --filter="@platformatic/sql-openapi" run lint
          pnpm --filter="@platformatic/sql-openapi" run test:typescript
      - name: Linting & Typescript for test suite sql-graphql
        run: |
          pnpm --filter="@platformatic/sql-graphql" run lint
          pnpm --filter="@platformatic/sql-graphql" run test:typescript
      - name: Linting & Typescript for test suite sql-events
        run: |
          pnpm --filter="@platformatic/sql-events" run lint
          pnpm --filter="@platformatic/sql-events" run test:typescript

  cli:
    name: 'cli - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'cli' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 1
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd packages/cli && pnpm test && pnpm run lint
      - name: License Check
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: cd packages/cli && pnpm run license

  foundation:
    name: 'foundation - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'utils' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run utils package test suite
        run: cd packages/foundation && pnpm test && pnpm run lint

  basic:
    name: 'basic - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'basic' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run node package test suite
        run: cd packages/basic && pnpm test && pnpm run lint

  itc:
    name: 'itc - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'itc' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run itc package test suite
        run: cd packages/itc && pnpm test && pnpm run lint

  globals:
    name: 'globals - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'globals' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run globals package test suite
        run: cd packages/globals && pnpm test && pnpm run lint

  runtime:
    name: 'runtime - ${{ matrix.os }} - ${{ matrix.node }} - ${{ matrix.suite }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'runtime' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
        suite: [main, api, cli, start, multiple-workers]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 25
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run runtime package test suite
        run: cd packages/runtime && pnpm run test:${{ matrix.suite }}

  service:
    name: 'service - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'service' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite with code coverage
        run: |
          cd packages/service
          pnpm run test

  gateway:
    name: 'gateway - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'gateway' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      matrix:
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite with code coverage
        run: cd packages/gateway && pnpm run test

  composer:
    name: 'composer - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'composer' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      matrix:
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite with code coverage
        run: cd packages/composer && pnpm run test

  db:
    name: 'db - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'db' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: ikalnytskyi/action-setup-postgres@v7
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: pnpm install -g typescript
        run: pnpm install -g typescript
      - name: Run test suite core
        run: cd packages/db-core && pnpm test && pnpm run lint
      - name: Run test suite Platformatic DB
        run: cd packages/db && pnpm test && pnpm run lint

  db-authorization:
    name: 'db-authorization - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'db-authorization' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      matrix:
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Start docker containers for testing
        run: docker compose up -d postgresql
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd packages/db-authorization && pnpm test && pnpm run lint

  db-core-test:
    name: 'db-core-test - ${{ matrix.db }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'db-core-test' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      matrix:
        db: [postgresql, mariadb, mysql, mysql8, sqlite]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Start docker containers for testing
        run: docker compose up -d ${{ matrix.db }}
        if: ${{ matrix.db != 'sqlite' }}
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Wait for DB
        run: sleep 10
        if: ${{ matrix.db != 'sqlite' }}
      - name: Run test suite sql-mapper
        run: cd packages/sql-mapper && pnpm run test:${{ matrix.db }} && cd ../..
      - name: Run test suite sql-json-schema-mapper
        run: cd packages/sql-json-schema-mapper && pnpm run test:${{ matrix.db }} && cd ../..
      - name: Run test suite sql-openapi
        run: cd packages/sql-openapi && pnpm run test:${{ matrix.db }} && cd ../..
      - name: Run test suite sql-graphql
        run: cd packages/sql-graphql && pnpm run test:${{ matrix.db }} && cd ..

  sql-events:
    name: 'sql-events - ${{ matrix.db }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'sql-events' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      matrix:
        db: [postgresql, mariadb, mysql, mysql8, sqlite]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Start docker containers for testing
        run: docker compose up -d ${{ matrix.db }}
        if: ${{ matrix.db != 'sqlite' }}
      - name: Start Valkey containers for testing
        run: docker compose up -d valkey
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Wait for DB
        run: sleep 10
        if: ${{ matrix.db != 'sqlite' }}
      - name: Run test suite sql-mapper
        run: cd packages/sql-events && pnpm run test:${{ matrix.db }}

  wattpm:
    name: 'wattpm - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'wattpm' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run wattpm package test suite
        run: cd packages/wattpm && pnpm test && pnpm run lint

  wattpm-utils:
    name: 'wattpm-utils - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'wattpm-utils' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run wattpm package test suite
        run: cd packages/wattpm-utils && pnpm test && pnpm run lint

  wattpm-pprof-capture:
    name: 'wattpm-pprof-capture - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'wattpm-pprof-capture' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run wattpm-pprof-capture package test suite
        run: cd packages/wattpm-pprof-capture && pnpm test && pnpm run lint

  create-wattpm:
    name: 'create-wattpm - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'create-wattpm' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Setup globals
        run: cd packages/cli && pnpm link --global && cd ../..
      - name: Setup local git user and email
        run: |
          git config --global user.name 'Platformatic Github Actions'
          git config --global user.email 'info@platformatic.dev'
      - name: Run test suite
        run: cd packages/create-wattpm && pnpm test && pnpm run lint

  create-platformatic:
    name: 'create-platformatic - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'create-platformatic' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Setup globals
        run: cd packages/cli && pnpm link --global && cd ../..
      - name: Setup local git user and email
        run: |
          git config --global user.name 'Platformatic Github Actions'
          git config --global user.email 'info@platformatic.dev'
      - name: Run test suite
        run: cd packages/create-platformatic && pnpm test && pnpm run lint

  control:
    name: 'control - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'control' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run runtime package test suite
        run: cd packages/control && pnpm test && pnpm run lint

  metrics:
    name: 'metrics - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'metrics' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - uses: 'nick-fields/retry@v3.0.2'
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd packages/metrics && pnpm test && pnpm run lint

  telemetry:
    name: 'telemetry - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'telemetry' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      matrix:
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: ikalnytskyi/action-setup-postgres@v7
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - uses: 'nick-fields/retry@v3.0.2'
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd packages/telemetry && pnpm test && pnpm run lint

  generators:
    name: 'generators - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'generators' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run generators package test suite
        run: cd packages/generators && pnpm test && pnpm run lint

  node:
    name: 'node - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'node' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run node package test suite
        run: cd packages/node && pnpm test && pnpm run lint

  next:
    name: 'next - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'next' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      matrix:
        node: [22, 24]
    env:
      VALKEY_HOST: localhost
      VALKEY_PORT: 6379
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Start docker containers for testing
        run: docker compose up -d valkey
      - name: Run next package test suite
        run: cd packages/next && pnpm test && pnpm run lint

  vite:
    name: 'vite - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'vite' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run vite package test suite
        run: cd packages/vite && pnpm test && pnpm run lint

  astro:
    name: 'astro - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'astro' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run astro package test suite
        run: cd packages/astro && pnpm test && pnpm run lint

  remix:
    name: 'remix - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'remix' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run remix package test suite
        run: cd packages/remix && pnpm test && pnpm run lint

  nest:
    name: 'nest - ${{ matrix.os }} - ${{ matrix.node }}'
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'nest' }}
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        node: [22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run next package test suite
        run: cd packages/nest && pnpm test && pnpm run lint
